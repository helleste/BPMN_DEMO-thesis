%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 444 374
%%Creator: yExport 1.5
%%Producer: org.freehep.graphicsio.ps.EPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Thursday, January 7, 2016 9:05:00 PM CET
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
444 374 setpagesize
0 0 0 0 setmargins
0 0 setorigin
444 374 setsize
naturalsize
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
444.000 0.00000 l
444.000 374.000 l
0.00000 374.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
444.000 0.00000 l
444.000 374.000 l
0.00000 374.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 444 374 rc
q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 -203.000 -76.0000 ] concat
1.00000 1.00000 1.00000 RG
newpath
203.000 76.0000 m
647.000 76.0000 l
647.000 450.000 l
203.000 450.000 l
203.000 76.0000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -203.000 -76.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -203.000 -76.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -203.000 -76.0000 ] defaultmatrix matrix concatmatrix setmatrix
q
q
1.00000 .949020 .737255 RG
newpath
218.500 91.0000 m
218.500 435.000 l
248.500 435.000 l
248.500 91.0000 l
h
f
newpath
248.500 91.0000 m
631.500 91.0000 l
631.500 435.000 l
248.500 435.000 l
248.500 91.0000 l
h
f
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
newpath
248.500 91.0000 m
631.500 91.0000 l
631.500 435.000 l
248.500 435.000 l
248.500 91.0000 l
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
218.500 91.0000 m
631.500 91.0000 l
631.500 435.000 l
218.500 435.000 l
218.500 91.0000 l
h
S
2 J
10.0000 M
Q
q
[ -1.83697E-16 -1.00000 1.00000 -1.83697E-16 222.500 286.588 ] concat
0 J
1.45000 M
newpath
3.39893 16.5020 m
3.39893 5.66211 l
6.21143 5.66211 l
7.29541 5.66211 8.12671 5.86719 8.70532 6.27734  c
9.28394 6.68750 9.57324 7.27832 9.57324 8.04980  c
9.57324 9.36328 8.83105 10.2983 7.34668 10.8550  c
9.11914 11.3970 10.0054 12.3760 10.0054 13.7920  c
10.0054 14.6709 9.71240 15.3423 9.12646 15.8062  c
8.54053 16.2700 7.69580 16.5020 6.59229 16.5020  c
h
4.92236 15.3521 m
5.23730 15.3521 l
6.36523 15.3521 7.09521 15.2812 7.42725 15.1396  c
8.06201 14.8711 8.37939 14.3730 8.37939 13.6455  c
8.37939 13.0010 8.09131 12.4651 7.51514 12.0378  c
6.93896 11.6106 6.21875 11.3970 5.35449 11.3970  c
4.92236 11.3970 l
h
4.92236 10.4229 m
5.41309 10.4229 l
6.23340 10.4229 6.86938 10.2471 7.32104 9.89551  c
7.77271 9.54395 7.99854 9.04834 7.99854 8.40869  c
7.99854 7.34424 7.17334 6.81201 5.52295 6.81201  c
4.92236 6.81201 l
h
16.1724 15.4912 m
15.3081 16.2871 14.4756 16.6851 13.6748 16.6851  c
13.0156 16.6851 12.4688 16.4788 12.0342 16.0662  c
11.5996 15.6536 11.3823 15.1323 11.3823 14.5024  c
11.3823 13.6333 11.7473 12.9656 12.4773 12.4993  c
13.2073 12.0330 14.2534 11.7998 15.6157 11.7998  c
15.9600 11.7998 l
15.9600 10.8403 l
15.9600 9.91748 15.4863 9.45605 14.5391 9.45605  c
13.7773 9.45605 12.9546 9.69043 12.0708 10.1592  c
12.0708 8.96533 l
13.0425 8.56982 13.9531 8.37207 14.8027 8.37207  c
15.6914 8.37207 16.3469 8.57227 16.7693 8.97266  c
17.1917 9.37305 17.4028 9.99561 17.4028 10.8403  c
17.4028 14.4438 l
17.4028 15.2690 17.6567 15.6816 18.1646 15.6816  c
18.2280 15.6816 18.3208 15.6719 18.4429 15.6523  c
18.5454 16.4507 l
18.2183 16.6069 17.8569 16.6851 17.4614 16.6851  c
16.7876 16.6851 16.3579 16.2871 16.1724 15.4912  c
h
15.9600 14.7075 m
15.9600 12.6494 l
15.4766 12.6348 l
14.6855 12.6348 14.0459 12.7849 13.5576 13.0852  c
13.0693 13.3855 12.8252 13.7798 12.8252 14.2681  c
12.8252 14.6147 12.9473 14.9077 13.1914 15.1470  c
13.4355 15.3862 13.7334 15.5059 14.0850 15.5059  c
14.6855 15.5059 15.3105 15.2397 15.9600 14.7075  c
h
19.8125 16.5020 m
19.8125 15.4180 l
24.7344 9.63184 l
20.0396 9.63184 l
20.0396 8.54785 l
26.5142 8.54785 l
26.5142 9.63184 l
21.5923 15.4180 l
26.6094 15.4180 l
26.6094 16.5020 l
h
34.7832 16.2456 m
33.8164 16.5386 32.9888 16.6851 32.3003 16.6851  c
31.1284 16.6851 30.1726 16.2957 29.4329 15.5168  c
28.6931 14.7380 28.3232 13.7285 28.3232 12.4883  c
28.3232 11.2822 28.6492 10.2935 29.3010 9.52197  c
29.9529 8.75049 30.7866 8.36475 31.8022 8.36475  c
32.7642 8.36475 33.5076 8.70654 34.0325 9.39014  c
34.5574 10.0737 34.8198 11.0454 34.8198 12.3052  c
34.8125 12.7520 l
29.7954 12.7520 l
30.0054 14.6416 30.9307 15.5864 32.5713 15.5864  c
33.1719 15.5864 33.9092 15.4253 34.7832 15.1030  c
h
29.8613 11.6680 m
33.3696 11.6680 l
33.3696 10.1885 32.8179 9.44873 31.7144 9.44873  c
30.6060 9.44873 29.9883 10.1885 29.8613 11.6680  c
h
30.5938 7.10498 m
32.3589 4.75391 l
34.0288 4.75391 l
31.6777 7.10498 l
h
37.3101 16.5020 m
37.3101 8.54785 l
38.7529 8.54785 l
38.7529 10.0420 l
39.5146 8.92871 40.4473 8.37207 41.5508 8.37207  c
42.2393 8.37207 42.7886 8.59058 43.1987 9.02759  c
43.6089 9.46460 43.8140 10.0518 43.8140 10.7891  c
43.8140 16.5020 l
42.3711 16.5020 l
42.3711 11.2578 l
42.3711 10.6670 42.2844 10.2458 42.1111 9.99438  c
41.9377 9.74292 41.6509 9.61719 41.2505 9.61719  c
40.3667 9.61719 39.5342 10.1958 38.7529 11.3530  c
38.7529 16.5020 l
h
f
2 J
10.0000 M
Q
q
[ -1.83697E-16 -1.00000 1.00000 -1.83697E-16 251.500 236.379 ] concat
0 J
1.45000 M
newpath
3.11914 13.6016 m
3.11914 4.92969 l
5.48047 4.92969 l
6.52734 4.92969 7.27930 5.10645 7.73633 5.45996  c
8.19336 5.81348 8.42188 6.39453 8.42188 7.20312  c
8.42188 8.12500 8.10938 8.84766 7.48438 9.37109  c
6.85938 9.89453 5.99219 10.1562 4.88281 10.1562  c
4.33789 10.1562 l
4.33789 13.6016 l
h
4.33789 9.22461 m
4.83594 9.22461 l
5.56641 9.22461 6.13086 9.05664 6.52930 8.72070  c
6.92773 8.38477 7.12695 7.91016 7.12695 7.29688  c
7.12695 6.77734 6.97070 6.40625 6.65820 6.18359  c
6.34570 5.96094 5.82422 5.84961 5.09375 5.84961  c
4.33789 5.84961 l
h
9.78711 13.6016 m
9.78711 4.34961 l
10.9414 4.34961 l
10.9414 13.6016 l
h
16.5371 12.7930 m
15.8457 13.4297 15.1797 13.7480 14.5391 13.7480  c
14.0117 13.7480 13.5742 13.5830 13.2266 13.2529  c
12.8789 12.9229 12.7051 12.5059 12.7051 12.0020  c
12.7051 11.3066 12.9971 10.7725 13.5811 10.3994  c
14.1650 10.0264 15.0020 9.83984 16.0918 9.83984  c
16.3672 9.83984 l
16.3672 9.07227 l
16.3672 8.33398 15.9883 7.96484 15.2305 7.96484  c
14.6211 7.96484 13.9629 8.15234 13.2559 8.52734  c
13.2559 7.57227 l
14.0332 7.25586 14.7617 7.09766 15.4414 7.09766  c
16.1523 7.09766 16.6768 7.25781 17.0146 7.57812  c
17.3525 7.89844 17.5215 8.39648 17.5215 9.07227  c
17.5215 11.9551 l
17.5215 12.6152 17.7246 12.9453 18.1309 12.9453  c
18.1816 12.9453 18.2559 12.9375 18.3535 12.9219  c
18.4355 13.5605 l
18.1738 13.6855 17.8848 13.7480 17.5684 13.7480  c
17.0293 13.7480 16.6855 13.4297 16.5371 12.7930  c
h
16.3672 12.1660 m
16.3672 10.5195 l
15.9805 10.5078 l
15.3477 10.5078 14.8359 10.6279 14.4453 10.8682  c
14.0547 11.1084 13.8594 11.4238 13.8594 11.8145  c
13.8594 12.0918 13.9570 12.3262 14.1523 12.5176  c
14.3477 12.7090 14.5859 12.8047 14.8672 12.8047  c
15.3477 12.8047 15.8477 12.5918 16.3672 12.1660  c
h
21.2012 13.6016 m
18.8340 7.23828 l
19.9883 7.23828 l
21.8398 12.1895 l
23.7910 7.23828 l
24.8691 7.23828 l
22.3555 13.6016 l
h
30.7578 13.3965 m
29.9844 13.6309 29.3223 13.7480 28.7715 13.7480  c
27.8340 13.7480 27.0693 13.4365 26.4775 12.8135  c
25.8857 12.1904 25.5898 11.3828 25.5898 10.3906  c
25.5898 9.42578 25.8506 8.63477 26.3721 8.01758  c
26.8936 7.40039 27.5605 7.09180 28.3730 7.09180  c
29.1426 7.09180 29.7373 7.36523 30.1572 7.91211  c
30.5771 8.45898 30.7871 9.23633 30.7871 10.2441  c
30.7812 10.6016 l
26.7676 10.6016 l
26.9355 12.1133 27.6758 12.8691 28.9883 12.8691  c
29.4688 12.8691 30.0586 12.7402 30.7578 12.4824  c
h
26.8203 9.73438 m
29.6270 9.73438 l
29.6270 8.55078 29.1855 7.95898 28.3027 7.95898  c
27.4160 7.95898 26.9219 8.55078 26.8203 9.73438  c
h
35.2637 13.7480 m
34.4043 13.7480 33.6914 13.4297 33.1250 12.7930  c
32.5586 12.1562 32.2754 11.3535 32.2754 10.3848  c
32.2754 9.34961 32.5557 8.54297 33.1162 7.96484  c
33.6768 7.38672 34.4590 7.09766 35.4629 7.09766  c
35.9590 7.09766 36.5137 7.16602 37.1270 7.30273  c
37.1270 8.26953 l
36.4746 8.07812 35.9434 7.98242 35.5332 7.98242  c
34.9434 7.98242 34.4697 8.20410 34.1123 8.64746  c
33.7549 9.09082 33.5762 9.68164 33.5762 10.4199  c
33.5762 11.1348 33.7598 11.7129 34.1270 12.1543  c
34.4941 12.5957 34.9746 12.8164 35.5684 12.8164  c
36.0957 12.8164 36.6387 12.6816 37.1973 12.4121  c
37.1973 13.4082 l
36.4512 13.6348 35.8066 13.7480 35.2637 13.7480  c
h
38.9258 13.6016 m
38.9258 4.34961 l
40.0801 4.34961 l
40.0801 10.3262 l
42.7754 7.23828 l
44.0176 7.23828 l
41.4453 10.2090 l
44.5508 13.6016 l
43.0742 13.6016 l
40.0801 10.3379 l
40.0801 13.6016 l
h
49.2207 12.7930 m
48.5293 13.4297 47.8633 13.7480 47.2227 13.7480  c
46.6953 13.7480 46.2578 13.5830 45.9102 13.2529  c
45.5625 12.9229 45.3887 12.5059 45.3887 12.0020  c
45.3887 11.3066 45.6807 10.7725 46.2646 10.3994  c
46.8486 10.0264 47.6855 9.83984 48.7754 9.83984  c
49.0508 9.83984 l
49.0508 9.07227 l
49.0508 8.33398 48.6719 7.96484 47.9141 7.96484  c
47.3047 7.96484 46.6465 8.15234 45.9395 8.52734  c
45.9395 7.57227 l
46.7168 7.25586 47.4453 7.09766 48.1250 7.09766  c
48.8359 7.09766 49.3604 7.25781 49.6982 7.57812  c
50.0361 7.89844 50.2051 8.39648 50.2051 9.07227  c
50.2051 11.9551 l
50.2051 12.6152 50.4082 12.9453 50.8145 12.9453  c
50.8652 12.9453 50.9395 12.9375 51.0371 12.9219  c
51.1191 13.5605 l
50.8574 13.6855 50.5684 13.7480 50.2520 13.7480  c
49.7129 13.7480 49.3691 13.4297 49.2207 12.7930  c
h
49.0508 12.1660 m
49.0508 10.5195 l
48.6641 10.5078 l
48.0312 10.5078 47.5195 10.6279 47.1289 10.8682  c
46.7383 11.1084 46.5430 11.4238 46.5430 11.8145  c
46.5430 12.0918 46.6406 12.3262 46.8359 12.5176  c
47.0312 12.7090 47.2695 12.8047 47.5508 12.8047  c
48.0312 12.8047 48.5312 12.5918 49.0508 12.1660  c
h
47.2812 6.08398 m
48.6934 4.20312 l
50.0293 4.20312 l
48.1484 6.08398 l
h
60.4473 13.6016 m
60.4473 12.4062 l
59.9785 13.3008 59.2715 13.7480 58.3262 13.7480  c
57.5605 13.7480 56.9580 13.4688 56.5186 12.9102  c
56.0791 12.3516 55.8594 11.5879 55.8594 10.6191  c
55.8594 9.56055 56.1084 8.70898 56.6064 8.06445  c
57.1045 7.41992 57.7598 7.09766 58.5723 7.09766  c
59.3262 7.09766 59.9512 7.38672 60.4473 7.96484  c
60.4473 4.34961 l
61.6074 4.34961 l
61.6074 13.6016 l
h
60.4473 8.75586 m
59.8496 8.22852 59.2832 7.96484 58.7480 7.96484  c
57.6426 7.96484 57.0898 8.81055 57.0898 10.5020  c
57.0898 11.9902 57.5820 12.7344 58.5664 12.7344  c
59.2070 12.7344 59.8340 12.3848 60.4473 11.6855  c
h
63.9160 13.6016 m
63.9160 7.23828 l
65.0703 7.23828 l
65.0703 8.43359 l
65.5273 7.54297 66.1914 7.09766 67.0625 7.09766  c
67.1797 7.09766 67.3027 7.10742 67.4316 7.12695  c
67.4316 8.20508 l
67.2324 8.13867 67.0566 8.10547 66.9043 8.10547  c
66.1738 8.10547 65.5625 8.53906 65.0703 9.40625  c
65.0703 13.6016 l
h
72.1074 12.7930 m
71.4160 13.4297 70.7500 13.7480 70.1094 13.7480  c
69.5820 13.7480 69.1445 13.5830 68.7969 13.2529  c
68.4492 12.9229 68.2754 12.5059 68.2754 12.0020  c
68.2754 11.3066 68.5674 10.7725 69.1514 10.3994  c
69.7354 10.0264 70.5723 9.83984 71.6621 9.83984  c
71.9375 9.83984 l
71.9375 9.07227 l
71.9375 8.33398 71.5586 7.96484 70.8008 7.96484  c
70.1914 7.96484 69.5332 8.15234 68.8262 8.52734  c
68.8262 7.57227 l
69.6035 7.25586 70.3320 7.09766 71.0117 7.09766  c
71.7227 7.09766 72.2471 7.25781 72.5850 7.57812  c
72.9229 7.89844 73.0918 8.39648 73.0918 9.07227  c
73.0918 11.9551 l
73.0918 12.6152 73.2949 12.9453 73.7012 12.9453  c
73.7520 12.9453 73.8262 12.9375 73.9238 12.9219  c
74.0059 13.5605 l
73.7441 13.6855 73.4551 13.7480 73.1387 13.7480  c
72.5996 13.7480 72.2559 13.4297 72.1074 12.7930  c
h
71.9375 12.1660 m
71.9375 10.5195 l
71.5508 10.5078 l
70.9180 10.5078 70.4062 10.6279 70.0156 10.8682  c
69.6250 11.1084 69.4297 11.4238 69.4297 11.8145  c
69.4297 12.0918 69.5273 12.3262 69.7227 12.5176  c
69.9180 12.7090 70.1562 12.8047 70.4375 12.8047  c
70.9180 12.8047 71.4180 12.5918 71.9375 12.1660  c
h
70.1680 6.08398 m
71.5801 4.20312 l
72.9160 4.20312 l
71.0352 6.08398 l
h
75.4531 13.6016 m
75.4531 4.34961 l
76.6074 4.34961 l
76.6074 8.43359 l
77.2168 7.54297 77.9629 7.09766 78.8457 7.09766  c
79.3965 7.09766 79.8359 7.27246 80.1641 7.62207  c
80.4922 7.97168 80.6562 8.44141 80.6562 9.03125  c
80.6562 13.6016 l
79.5020 13.6016 l
79.5020 9.40625 l
79.5020 8.93359 79.4326 8.59668 79.2939 8.39551  c
79.1553 8.19434 78.9258 8.09375 78.6055 8.09375  c
77.8984 8.09375 77.2324 8.55664 76.6074 9.48242  c
76.6074 13.6016 l
h
86.1816 12.7930 m
85.4902 13.4297 84.8242 13.7480 84.1836 13.7480  c
83.6562 13.7480 83.2188 13.5830 82.8711 13.2529  c
82.5234 12.9229 82.3496 12.5059 82.3496 12.0020  c
82.3496 11.3066 82.6416 10.7725 83.2256 10.3994  c
83.8096 10.0264 84.6465 9.83984 85.7363 9.83984  c
86.0117 9.83984 l
86.0117 9.07227 l
86.0117 8.33398 85.6328 7.96484 84.8750 7.96484  c
84.2656 7.96484 83.6074 8.15234 82.9004 8.52734  c
82.9004 7.57227 l
83.6777 7.25586 84.4062 7.09766 85.0859 7.09766  c
85.7969 7.09766 86.3213 7.25781 86.6592 7.57812  c
86.9971 7.89844 87.1660 8.39648 87.1660 9.07227  c
87.1660 11.9551 l
87.1660 12.6152 87.3691 12.9453 87.7754 12.9453  c
87.8262 12.9453 87.9004 12.9375 87.9980 12.9219  c
88.0801 13.5605 l
87.8184 13.6855 87.5293 13.7480 87.2129 13.7480  c
86.6738 13.7480 86.3301 13.4297 86.1816 12.7930  c
h
86.0117 12.1660 m
86.0117 10.5195 l
85.6250 10.5078 l
84.9922 10.5078 84.4805 10.6279 84.0898 10.8682  c
83.6992 11.1084 83.5039 11.4238 83.5039 11.8145  c
83.5039 12.0918 83.6016 12.3262 83.7969 12.5176  c
83.9922 12.7090 84.2305 12.8047 84.5117 12.8047  c
84.9922 12.8047 85.4922 12.5918 86.0117 12.1660  c
h
93.9746 13.6016 m
93.9746 12.7344 l
95.7090 12.7344 l
95.7090 5.89062 l
93.9746 6.32422 l
93.9746 5.43359 l
96.8691 4.71289 l
96.8691 12.7344 l
98.6035 12.7344 l
98.6035 13.6016 l
h
f
2 J
10.0000 M
Q
q
[ -1.83697E-16 -1.00000 1.00000 -1.83697E-16 251.500 396.879 ] concat
0 J
1.45000 M
newpath
3.11914 13.6016 m
3.11914 4.92969 l
5.48047 4.92969 l
6.52734 4.92969 7.27930 5.10645 7.73633 5.45996  c
8.19336 5.81348 8.42188 6.39453 8.42188 7.20312  c
8.42188 8.12500 8.10938 8.84766 7.48438 9.37109  c
6.85938 9.89453 5.99219 10.1562 4.88281 10.1562  c
4.33789 10.1562 l
4.33789 13.6016 l
h
4.33789 9.22461 m
4.83594 9.22461 l
5.56641 9.22461 6.13086 9.05664 6.52930 8.72070  c
6.92773 8.38477 7.12695 7.91016 7.12695 7.29688  c
7.12695 6.77734 6.97070 6.40625 6.65820 6.18359  c
6.34570 5.96094 5.82422 5.84961 5.09375 5.84961  c
4.33789 5.84961 l
h
9.78711 13.6016 m
9.78711 4.34961 l
10.9414 4.34961 l
10.9414 13.6016 l
h
16.5371 12.7930 m
15.8457 13.4297 15.1797 13.7480 14.5391 13.7480  c
14.0117 13.7480 13.5742 13.5830 13.2266 13.2529  c
12.8789 12.9229 12.7051 12.5059 12.7051 12.0020  c
12.7051 11.3066 12.9971 10.7725 13.5811 10.3994  c
14.1650 10.0264 15.0020 9.83984 16.0918 9.83984  c
16.3672 9.83984 l
16.3672 9.07227 l
16.3672 8.33398 15.9883 7.96484 15.2305 7.96484  c
14.6211 7.96484 13.9629 8.15234 13.2559 8.52734  c
13.2559 7.57227 l
14.0332 7.25586 14.7617 7.09766 15.4414 7.09766  c
16.1523 7.09766 16.6768 7.25781 17.0146 7.57812  c
17.3525 7.89844 17.5215 8.39648 17.5215 9.07227  c
17.5215 11.9551 l
17.5215 12.6152 17.7246 12.9453 18.1309 12.9453  c
18.1816 12.9453 18.2559 12.9375 18.3535 12.9219  c
18.4355 13.5605 l
18.1738 13.6855 17.8848 13.7480 17.5684 13.7480  c
17.0293 13.7480 16.6855 13.4297 16.5371 12.7930  c
h
16.3672 12.1660 m
16.3672 10.5195 l
15.9805 10.5078 l
15.3477 10.5078 14.8359 10.6279 14.4453 10.8682  c
14.0547 11.1084 13.8594 11.4238 13.8594 11.8145  c
13.8594 12.0918 13.9570 12.3262 14.1523 12.5176  c
14.3477 12.7090 14.5859 12.8047 14.8672 12.8047  c
15.3477 12.8047 15.8477 12.5918 16.3672 12.1660  c
h
21.2012 13.6016 m
18.8340 7.23828 l
19.9883 7.23828 l
21.8398 12.1895 l
23.7910 7.23828 l
24.8691 7.23828 l
22.3555 13.6016 l
h
30.7578 13.3965 m
29.9844 13.6309 29.3223 13.7480 28.7715 13.7480  c
27.8340 13.7480 27.0693 13.4365 26.4775 12.8135  c
25.8857 12.1904 25.5898 11.3828 25.5898 10.3906  c
25.5898 9.42578 25.8506 8.63477 26.3721 8.01758  c
26.8936 7.40039 27.5605 7.09180 28.3730 7.09180  c
29.1426 7.09180 29.7373 7.36523 30.1572 7.91211  c
30.5771 8.45898 30.7871 9.23633 30.7871 10.2441  c
30.7812 10.6016 l
26.7676 10.6016 l
26.9355 12.1133 27.6758 12.8691 28.9883 12.8691  c
29.4688 12.8691 30.0586 12.7402 30.7578 12.4824  c
h
26.8203 9.73438 m
29.6270 9.73438 l
29.6270 8.55078 29.1855 7.95898 28.3027 7.95898  c
27.4160 7.95898 26.9219 8.55078 26.8203 9.73438  c
h
35.2637 13.7480 m
34.4043 13.7480 33.6914 13.4297 33.1250 12.7930  c
32.5586 12.1562 32.2754 11.3535 32.2754 10.3848  c
32.2754 9.34961 32.5557 8.54297 33.1162 7.96484  c
33.6768 7.38672 34.4590 7.09766 35.4629 7.09766  c
35.9590 7.09766 36.5137 7.16602 37.1270 7.30273  c
37.1270 8.26953 l
36.4746 8.07812 35.9434 7.98242 35.5332 7.98242  c
34.9434 7.98242 34.4697 8.20410 34.1123 8.64746  c
33.7549 9.09082 33.5762 9.68164 33.5762 10.4199  c
33.5762 11.1348 33.7598 11.7129 34.1270 12.1543  c
34.4941 12.5957 34.9746 12.8164 35.5684 12.8164  c
36.0957 12.8164 36.6387 12.6816 37.1973 12.4121  c
37.1973 13.4082 l
36.4512 13.6348 35.8066 13.7480 35.2637 13.7480  c
h
38.9258 13.6016 m
38.9258 4.34961 l
40.0801 4.34961 l
40.0801 10.3262 l
42.7754 7.23828 l
44.0176 7.23828 l
41.4453 10.2090 l
44.5508 13.6016 l
43.0742 13.6016 l
40.0801 10.3379 l
40.0801 13.6016 l
h
49.2207 12.7930 m
48.5293 13.4297 47.8633 13.7480 47.2227 13.7480  c
46.6953 13.7480 46.2578 13.5830 45.9102 13.2529  c
45.5625 12.9229 45.3887 12.5059 45.3887 12.0020  c
45.3887 11.3066 45.6807 10.7725 46.2646 10.3994  c
46.8486 10.0264 47.6855 9.83984 48.7754 9.83984  c
49.0508 9.83984 l
49.0508 9.07227 l
49.0508 8.33398 48.6719 7.96484 47.9141 7.96484  c
47.3047 7.96484 46.6465 8.15234 45.9395 8.52734  c
45.9395 7.57227 l
46.7168 7.25586 47.4453 7.09766 48.1250 7.09766  c
48.8359 7.09766 49.3604 7.25781 49.6982 7.57812  c
50.0361 7.89844 50.2051 8.39648 50.2051 9.07227  c
50.2051 11.9551 l
50.2051 12.6152 50.4082 12.9453 50.8145 12.9453  c
50.8652 12.9453 50.9395 12.9375 51.0371 12.9219  c
51.1191 13.5605 l
50.8574 13.6855 50.5684 13.7480 50.2520 13.7480  c
49.7129 13.7480 49.3691 13.4297 49.2207 12.7930  c
h
49.0508 12.1660 m
49.0508 10.5195 l
48.6641 10.5078 l
48.0312 10.5078 47.5195 10.6279 47.1289 10.8682  c
46.7383 11.1084 46.5430 11.4238 46.5430 11.8145  c
46.5430 12.0918 46.6406 12.3262 46.8359 12.5176  c
47.0312 12.7090 47.2695 12.8047 47.5508 12.8047  c
48.0312 12.8047 48.5312 12.5918 49.0508 12.1660  c
h
47.2812 6.08398 m
48.6934 4.20312 l
50.0293 4.20312 l
48.1484 6.08398 l
h
60.4473 13.6016 m
60.4473 12.4062 l
59.9785 13.3008 59.2715 13.7480 58.3262 13.7480  c
57.5605 13.7480 56.9580 13.4688 56.5186 12.9102  c
56.0791 12.3516 55.8594 11.5879 55.8594 10.6191  c
55.8594 9.56055 56.1084 8.70898 56.6064 8.06445  c
57.1045 7.41992 57.7598 7.09766 58.5723 7.09766  c
59.3262 7.09766 59.9512 7.38672 60.4473 7.96484  c
60.4473 4.34961 l
61.6074 4.34961 l
61.6074 13.6016 l
h
60.4473 8.75586 m
59.8496 8.22852 59.2832 7.96484 58.7480 7.96484  c
57.6426 7.96484 57.0898 8.81055 57.0898 10.5020  c
57.0898 11.9902 57.5820 12.7344 58.5664 12.7344  c
59.2070 12.7344 59.8340 12.3848 60.4473 11.6855  c
h
63.9160 13.6016 m
63.9160 7.23828 l
65.0703 7.23828 l
65.0703 8.43359 l
65.5273 7.54297 66.1914 7.09766 67.0625 7.09766  c
67.1797 7.09766 67.3027 7.10742 67.4316 7.12695  c
67.4316 8.20508 l
67.2324 8.13867 67.0566 8.10547 66.9043 8.10547  c
66.1738 8.10547 65.5625 8.53906 65.0703 9.40625  c
65.0703 13.6016 l
h
72.1074 12.7930 m
71.4160 13.4297 70.7500 13.7480 70.1094 13.7480  c
69.5820 13.7480 69.1445 13.5830 68.7969 13.2529  c
68.4492 12.9229 68.2754 12.5059 68.2754 12.0020  c
68.2754 11.3066 68.5674 10.7725 69.1514 10.3994  c
69.7354 10.0264 70.5723 9.83984 71.6621 9.83984  c
71.9375 9.83984 l
71.9375 9.07227 l
71.9375 8.33398 71.5586 7.96484 70.8008 7.96484  c
70.1914 7.96484 69.5332 8.15234 68.8262 8.52734  c
68.8262 7.57227 l
69.6035 7.25586 70.3320 7.09766 71.0117 7.09766  c
71.7227 7.09766 72.2471 7.25781 72.5850 7.57812  c
72.9229 7.89844 73.0918 8.39648 73.0918 9.07227  c
73.0918 11.9551 l
73.0918 12.6152 73.2949 12.9453 73.7012 12.9453  c
73.7520 12.9453 73.8262 12.9375 73.9238 12.9219  c
74.0059 13.5605 l
73.7441 13.6855 73.4551 13.7480 73.1387 13.7480  c
72.5996 13.7480 72.2559 13.4297 72.1074 12.7930  c
h
71.9375 12.1660 m
71.9375 10.5195 l
71.5508 10.5078 l
70.9180 10.5078 70.4062 10.6279 70.0156 10.8682  c
69.6250 11.1084 69.4297 11.4238 69.4297 11.8145  c
69.4297 12.0918 69.5273 12.3262 69.7227 12.5176  c
69.9180 12.7090 70.1562 12.8047 70.4375 12.8047  c
70.9180 12.8047 71.4180 12.5918 71.9375 12.1660  c
h
70.1680 6.08398 m
71.5801 4.20312 l
72.9160 4.20312 l
71.0352 6.08398 l
h
75.4531 13.6016 m
75.4531 4.34961 l
76.6074 4.34961 l
76.6074 8.43359 l
77.2168 7.54297 77.9629 7.09766 78.8457 7.09766  c
79.3965 7.09766 79.8359 7.27246 80.1641 7.62207  c
80.4922 7.97168 80.6562 8.44141 80.6562 9.03125  c
80.6562 13.6016 l
79.5020 13.6016 l
79.5020 9.40625 l
79.5020 8.93359 79.4326 8.59668 79.2939 8.39551  c
79.1553 8.19434 78.9258 8.09375 78.6055 8.09375  c
77.8984 8.09375 77.2324 8.55664 76.6074 9.48242  c
76.6074 13.6016 l
h
86.1816 12.7930 m
85.4902 13.4297 84.8242 13.7480 84.1836 13.7480  c
83.6562 13.7480 83.2188 13.5830 82.8711 13.2529  c
82.5234 12.9229 82.3496 12.5059 82.3496 12.0020  c
82.3496 11.3066 82.6416 10.7725 83.2256 10.3994  c
83.8096 10.0264 84.6465 9.83984 85.7363 9.83984  c
86.0117 9.83984 l
86.0117 9.07227 l
86.0117 8.33398 85.6328 7.96484 84.8750 7.96484  c
84.2656 7.96484 83.6074 8.15234 82.9004 8.52734  c
82.9004 7.57227 l
83.6777 7.25586 84.4062 7.09766 85.0859 7.09766  c
85.7969 7.09766 86.3213 7.25781 86.6592 7.57812  c
86.9971 7.89844 87.1660 8.39648 87.1660 9.07227  c
87.1660 11.9551 l
87.1660 12.6152 87.3691 12.9453 87.7754 12.9453  c
87.8262 12.9453 87.9004 12.9375 87.9980 12.9219  c
88.0801 13.5605 l
87.8184 13.6855 87.5293 13.7480 87.2129 13.7480  c
86.6738 13.7480 86.3301 13.4297 86.1816 12.7930  c
h
86.0117 12.1660 m
86.0117 10.5195 l
85.6250 10.5078 l
84.9922 10.5078 84.4805 10.6279 84.0898 10.8682  c
83.6992 11.1084 83.5039 11.4238 83.5039 11.8145  c
83.5039 12.0918 83.6016 12.3262 83.7969 12.5176  c
83.9922 12.7090 84.2305 12.8047 84.5117 12.8047  c
84.9922 12.8047 85.4922 12.5918 86.0117 12.1660  c
h
93.1660 13.6016 m
93.1660 12.5879 l
93.5020 11.8027 94.1816 10.9473 95.2051 10.0215  c
95.8672 9.42969 l
96.7188 8.66016 97.1445 7.89648 97.1445 7.13867  c
97.1445 6.65430 96.9990 6.27344 96.7080 5.99609  c
96.4170 5.71875 96.0176 5.58008 95.5098 5.58008  c
94.9082 5.58008 94.1992 5.81250 93.3828 6.27734  c
93.3828 5.25781 l
94.1523 4.89453 94.9160 4.71289 95.6738 4.71289  c
96.4863 4.71289 97.1387 4.93164 97.6309 5.36914  c
98.1230 5.80664 98.3691 6.38672 98.3691 7.10938  c
98.3691 7.62891 98.2451 8.08984 97.9971 8.49219  c
97.7490 8.89453 97.2871 9.38281 96.6113 9.95703  c
96.1660 10.3379 l
95.2402 11.1230 94.7051 11.8730 94.5605 12.5879  c
98.3281 12.5879 l
98.3281 13.6016 l
h
f
2 J
10.0000 M
Q
q
0 J
1.45000 M
newpath
248.500 91.0000 m
631.500 91.0000 l
631.500 435.000 l
248.500 435.000 l
248.500 91.0000 l
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
248.500 91.0000 m
631.500 91.0000 l
631.500 260.000 l
248.500 260.000 l
248.500 91.0000 l
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
248.500 260.000 m
631.500 260.000 l
631.500 435.000 l
248.500 435.000 l
248.500 260.000 l
h
S
2 J
10.0000 M
Q
q
[ -1.83697E-16 -1.00000 1.00000 -1.83697E-16 222.500 286.588 ] concat
0 J
1.45000 M
newpath
3.39893 16.5020 m
3.39893 5.66211 l
6.21143 5.66211 l
7.29541 5.66211 8.12671 5.86719 8.70532 6.27734  c
9.28394 6.68750 9.57324 7.27832 9.57324 8.04980  c
9.57324 9.36328 8.83105 10.2983 7.34668 10.8550  c
9.11914 11.3970 10.0054 12.3760 10.0054 13.7920  c
10.0054 14.6709 9.71240 15.3423 9.12646 15.8062  c
8.54053 16.2700 7.69580 16.5020 6.59229 16.5020  c
h
4.92236 15.3521 m
5.23730 15.3521 l
6.36523 15.3521 7.09521 15.2812 7.42725 15.1396  c
8.06201 14.8711 8.37939 14.3730 8.37939 13.6455  c
8.37939 13.0010 8.09131 12.4651 7.51514 12.0378  c
6.93896 11.6106 6.21875 11.3970 5.35449 11.3970  c
4.92236 11.3970 l
h
4.92236 10.4229 m
5.41309 10.4229 l
6.23340 10.4229 6.86938 10.2471 7.32104 9.89551  c
7.77271 9.54395 7.99854 9.04834 7.99854 8.40869  c
7.99854 7.34424 7.17334 6.81201 5.52295 6.81201  c
4.92236 6.81201 l
h
16.1724 15.4912 m
15.3081 16.2871 14.4756 16.6851 13.6748 16.6851  c
13.0156 16.6851 12.4688 16.4788 12.0342 16.0662  c
11.5996 15.6536 11.3823 15.1323 11.3823 14.5024  c
11.3823 13.6333 11.7473 12.9656 12.4773 12.4993  c
13.2073 12.0330 14.2534 11.7998 15.6157 11.7998  c
15.9600 11.7998 l
15.9600 10.8403 l
15.9600 9.91748 15.4863 9.45605 14.5391 9.45605  c
13.7773 9.45605 12.9546 9.69043 12.0708 10.1592  c
12.0708 8.96533 l
13.0425 8.56982 13.9531 8.37207 14.8027 8.37207  c
15.6914 8.37207 16.3469 8.57227 16.7693 8.97266  c
17.1917 9.37305 17.4028 9.99561 17.4028 10.8403  c
17.4028 14.4438 l
17.4028 15.2690 17.6567 15.6816 18.1646 15.6816  c
18.2280 15.6816 18.3208 15.6719 18.4429 15.6523  c
18.5454 16.4507 l
18.2183 16.6069 17.8569 16.6851 17.4614 16.6851  c
16.7876 16.6851 16.3579 16.2871 16.1724 15.4912  c
h
15.9600 14.7075 m
15.9600 12.6494 l
15.4766 12.6348 l
14.6855 12.6348 14.0459 12.7849 13.5576 13.0852  c
13.0693 13.3855 12.8252 13.7798 12.8252 14.2681  c
12.8252 14.6147 12.9473 14.9077 13.1914 15.1470  c
13.4355 15.3862 13.7334 15.5059 14.0850 15.5059  c
14.6855 15.5059 15.3105 15.2397 15.9600 14.7075  c
h
19.8125 16.5020 m
19.8125 15.4180 l
24.7344 9.63184 l
20.0396 9.63184 l
20.0396 8.54785 l
26.5142 8.54785 l
26.5142 9.63184 l
21.5923 15.4180 l
26.6094 15.4180 l
26.6094 16.5020 l
h
34.7832 16.2456 m
33.8164 16.5386 32.9888 16.6851 32.3003 16.6851  c
31.1284 16.6851 30.1726 16.2957 29.4329 15.5168  c
28.6931 14.7380 28.3232 13.7285 28.3232 12.4883  c
28.3232 11.2822 28.6492 10.2935 29.3010 9.52197  c
29.9529 8.75049 30.7866 8.36475 31.8022 8.36475  c
32.7642 8.36475 33.5076 8.70654 34.0325 9.39014  c
34.5574 10.0737 34.8198 11.0454 34.8198 12.3052  c
34.8125 12.7520 l
29.7954 12.7520 l
30.0054 14.6416 30.9307 15.5864 32.5713 15.5864  c
33.1719 15.5864 33.9092 15.4253 34.7832 15.1030  c
h
29.8613 11.6680 m
33.3696 11.6680 l
33.3696 10.1885 32.8179 9.44873 31.7144 9.44873  c
30.6060 9.44873 29.9883 10.1885 29.8613 11.6680  c
h
30.5938 7.10498 m
32.3589 4.75391 l
34.0288 4.75391 l
31.6777 7.10498 l
h
37.3101 16.5020 m
37.3101 8.54785 l
38.7529 8.54785 l
38.7529 10.0420 l
39.5146 8.92871 40.4473 8.37207 41.5508 8.37207  c
42.2393 8.37207 42.7886 8.59058 43.1987 9.02759  c
43.6089 9.46460 43.8140 10.0518 43.8140 10.7891  c
43.8140 16.5020 l
42.3711 16.5020 l
42.3711 11.2578 l
42.3711 10.6670 42.2844 10.2458 42.1111 9.99438  c
41.9377 9.74292 41.6509 9.61719 41.2505 9.61719  c
40.3667 9.61719 39.5342 10.1958 38.7529 11.3530  c
38.7529 16.5020 l
h
f
2 J
10.0000 M
Q
q
[ -1.83697E-16 -1.00000 1.00000 -1.83697E-16 251.500 236.379 ] concat
0 J
1.45000 M
newpath
3.11914 13.6016 m
3.11914 4.92969 l
5.48047 4.92969 l
6.52734 4.92969 7.27930 5.10645 7.73633 5.45996  c
8.19336 5.81348 8.42188 6.39453 8.42188 7.20312  c
8.42188 8.12500 8.10938 8.84766 7.48438 9.37109  c
6.85938 9.89453 5.99219 10.1562 4.88281 10.1562  c
4.33789 10.1562 l
4.33789 13.6016 l
h
4.33789 9.22461 m
4.83594 9.22461 l
5.56641 9.22461 6.13086 9.05664 6.52930 8.72070  c
6.92773 8.38477 7.12695 7.91016 7.12695 7.29688  c
7.12695 6.77734 6.97070 6.40625 6.65820 6.18359  c
6.34570 5.96094 5.82422 5.84961 5.09375 5.84961  c
4.33789 5.84961 l
h
9.78711 13.6016 m
9.78711 4.34961 l
10.9414 4.34961 l
10.9414 13.6016 l
h
16.5371 12.7930 m
15.8457 13.4297 15.1797 13.7480 14.5391 13.7480  c
14.0117 13.7480 13.5742 13.5830 13.2266 13.2529  c
12.8789 12.9229 12.7051 12.5059 12.7051 12.0020  c
12.7051 11.3066 12.9971 10.7725 13.5811 10.3994  c
14.1650 10.0264 15.0020 9.83984 16.0918 9.83984  c
16.3672 9.83984 l
16.3672 9.07227 l
16.3672 8.33398 15.9883 7.96484 15.2305 7.96484  c
14.6211 7.96484 13.9629 8.15234 13.2559 8.52734  c
13.2559 7.57227 l
14.0332 7.25586 14.7617 7.09766 15.4414 7.09766  c
16.1523 7.09766 16.6768 7.25781 17.0146 7.57812  c
17.3525 7.89844 17.5215 8.39648 17.5215 9.07227  c
17.5215 11.9551 l
17.5215 12.6152 17.7246 12.9453 18.1309 12.9453  c
18.1816 12.9453 18.2559 12.9375 18.3535 12.9219  c
18.4355 13.5605 l
18.1738 13.6855 17.8848 13.7480 17.5684 13.7480  c
17.0293 13.7480 16.6855 13.4297 16.5371 12.7930  c
h
16.3672 12.1660 m
16.3672 10.5195 l
15.9805 10.5078 l
15.3477 10.5078 14.8359 10.6279 14.4453 10.8682  c
14.0547 11.1084 13.8594 11.4238 13.8594 11.8145  c
13.8594 12.0918 13.9570 12.3262 14.1523 12.5176  c
14.3477 12.7090 14.5859 12.8047 14.8672 12.8047  c
15.3477 12.8047 15.8477 12.5918 16.3672 12.1660  c
h
21.2012 13.6016 m
18.8340 7.23828 l
19.9883 7.23828 l
21.8398 12.1895 l
23.7910 7.23828 l
24.8691 7.23828 l
22.3555 13.6016 l
h
30.7578 13.3965 m
29.9844 13.6309 29.3223 13.7480 28.7715 13.7480  c
27.8340 13.7480 27.0693 13.4365 26.4775 12.8135  c
25.8857 12.1904 25.5898 11.3828 25.5898 10.3906  c
25.5898 9.42578 25.8506 8.63477 26.3721 8.01758  c
26.8936 7.40039 27.5605 7.09180 28.3730 7.09180  c
29.1426 7.09180 29.7373 7.36523 30.1572 7.91211  c
30.5771 8.45898 30.7871 9.23633 30.7871 10.2441  c
30.7812 10.6016 l
26.7676 10.6016 l
26.9355 12.1133 27.6758 12.8691 28.9883 12.8691  c
29.4688 12.8691 30.0586 12.7402 30.7578 12.4824  c
h
26.8203 9.73438 m
29.6270 9.73438 l
29.6270 8.55078 29.1855 7.95898 28.3027 7.95898  c
27.4160 7.95898 26.9219 8.55078 26.8203 9.73438  c
h
35.2637 13.7480 m
34.4043 13.7480 33.6914 13.4297 33.1250 12.7930  c
32.5586 12.1562 32.2754 11.3535 32.2754 10.3848  c
32.2754 9.34961 32.5557 8.54297 33.1162 7.96484  c
33.6768 7.38672 34.4590 7.09766 35.4629 7.09766  c
35.9590 7.09766 36.5137 7.16602 37.1270 7.30273  c
37.1270 8.26953 l
36.4746 8.07812 35.9434 7.98242 35.5332 7.98242  c
34.9434 7.98242 34.4697 8.20410 34.1123 8.64746  c
33.7549 9.09082 33.5762 9.68164 33.5762 10.4199  c
33.5762 11.1348 33.7598 11.7129 34.1270 12.1543  c
34.4941 12.5957 34.9746 12.8164 35.5684 12.8164  c
36.0957 12.8164 36.6387 12.6816 37.1973 12.4121  c
37.1973 13.4082 l
36.4512 13.6348 35.8066 13.7480 35.2637 13.7480  c
h
38.9258 13.6016 m
38.9258 4.34961 l
40.0801 4.34961 l
40.0801 10.3262 l
42.7754 7.23828 l
44.0176 7.23828 l
41.4453 10.2090 l
44.5508 13.6016 l
43.0742 13.6016 l
40.0801 10.3379 l
40.0801 13.6016 l
h
49.2207 12.7930 m
48.5293 13.4297 47.8633 13.7480 47.2227 13.7480  c
46.6953 13.7480 46.2578 13.5830 45.9102 13.2529  c
45.5625 12.9229 45.3887 12.5059 45.3887 12.0020  c
45.3887 11.3066 45.6807 10.7725 46.2646 10.3994  c
46.8486 10.0264 47.6855 9.83984 48.7754 9.83984  c
49.0508 9.83984 l
49.0508 9.07227 l
49.0508 8.33398 48.6719 7.96484 47.9141 7.96484  c
47.3047 7.96484 46.6465 8.15234 45.9395 8.52734  c
45.9395 7.57227 l
46.7168 7.25586 47.4453 7.09766 48.1250 7.09766  c
48.8359 7.09766 49.3604 7.25781 49.6982 7.57812  c
50.0361 7.89844 50.2051 8.39648 50.2051 9.07227  c
50.2051 11.9551 l
50.2051 12.6152 50.4082 12.9453 50.8145 12.9453  c
50.8652 12.9453 50.9395 12.9375 51.0371 12.9219  c
51.1191 13.5605 l
50.8574 13.6855 50.5684 13.7480 50.2520 13.7480  c
49.7129 13.7480 49.3691 13.4297 49.2207 12.7930  c
h
49.0508 12.1660 m
49.0508 10.5195 l
48.6641 10.5078 l
48.0312 10.5078 47.5195 10.6279 47.1289 10.8682  c
46.7383 11.1084 46.5430 11.4238 46.5430 11.8145  c
46.5430 12.0918 46.6406 12.3262 46.8359 12.5176  c
47.0312 12.7090 47.2695 12.8047 47.5508 12.8047  c
48.0312 12.8047 48.5312 12.5918 49.0508 12.1660  c
h
47.2812 6.08398 m
48.6934 4.20312 l
50.0293 4.20312 l
48.1484 6.08398 l
h
60.4473 13.6016 m
60.4473 12.4062 l
59.9785 13.3008 59.2715 13.7480 58.3262 13.7480  c
57.5605 13.7480 56.9580 13.4688 56.5186 12.9102  c
56.0791 12.3516 55.8594 11.5879 55.8594 10.6191  c
55.8594 9.56055 56.1084 8.70898 56.6064 8.06445  c
57.1045 7.41992 57.7598 7.09766 58.5723 7.09766  c
59.3262 7.09766 59.9512 7.38672 60.4473 7.96484  c
60.4473 4.34961 l
61.6074 4.34961 l
61.6074 13.6016 l
h
60.4473 8.75586 m
59.8496 8.22852 59.2832 7.96484 58.7480 7.96484  c
57.6426 7.96484 57.0898 8.81055 57.0898 10.5020  c
57.0898 11.9902 57.5820 12.7344 58.5664 12.7344  c
59.2070 12.7344 59.8340 12.3848 60.4473 11.6855  c
h
63.9160 13.6016 m
63.9160 7.23828 l
65.0703 7.23828 l
65.0703 8.43359 l
65.5273 7.54297 66.1914 7.09766 67.0625 7.09766  c
67.1797 7.09766 67.3027 7.10742 67.4316 7.12695  c
67.4316 8.20508 l
67.2324 8.13867 67.0566 8.10547 66.9043 8.10547  c
66.1738 8.10547 65.5625 8.53906 65.0703 9.40625  c
65.0703 13.6016 l
h
72.1074 12.7930 m
71.4160 13.4297 70.7500 13.7480 70.1094 13.7480  c
69.5820 13.7480 69.1445 13.5830 68.7969 13.2529  c
68.4492 12.9229 68.2754 12.5059 68.2754 12.0020  c
68.2754 11.3066 68.5674 10.7725 69.1514 10.3994  c
69.7354 10.0264 70.5723 9.83984 71.6621 9.83984  c
71.9375 9.83984 l
71.9375 9.07227 l
71.9375 8.33398 71.5586 7.96484 70.8008 7.96484  c
70.1914 7.96484 69.5332 8.15234 68.8262 8.52734  c
68.8262 7.57227 l
69.6035 7.25586 70.3320 7.09766 71.0117 7.09766  c
71.7227 7.09766 72.2471 7.25781 72.5850 7.57812  c
72.9229 7.89844 73.0918 8.39648 73.0918 9.07227  c
73.0918 11.9551 l
73.0918 12.6152 73.2949 12.9453 73.7012 12.9453  c
73.7520 12.9453 73.8262 12.9375 73.9238 12.9219  c
74.0059 13.5605 l
73.7441 13.6855 73.4551 13.7480 73.1387 13.7480  c
72.5996 13.7480 72.2559 13.4297 72.1074 12.7930  c
h
71.9375 12.1660 m
71.9375 10.5195 l
71.5508 10.5078 l
70.9180 10.5078 70.4062 10.6279 70.0156 10.8682  c
69.6250 11.1084 69.4297 11.4238 69.4297 11.8145  c
69.4297 12.0918 69.5273 12.3262 69.7227 12.5176  c
69.9180 12.7090 70.1562 12.8047 70.4375 12.8047  c
70.9180 12.8047 71.4180 12.5918 71.9375 12.1660  c
h
70.1680 6.08398 m
71.5801 4.20312 l
72.9160 4.20312 l
71.0352 6.08398 l
h
75.4531 13.6016 m
75.4531 4.34961 l
76.6074 4.34961 l
76.6074 8.43359 l
77.2168 7.54297 77.9629 7.09766 78.8457 7.09766  c
79.3965 7.09766 79.8359 7.27246 80.1641 7.62207  c
80.4922 7.97168 80.6562 8.44141 80.6562 9.03125  c
80.6562 13.6016 l
79.5020 13.6016 l
79.5020 9.40625 l
79.5020 8.93359 79.4326 8.59668 79.2939 8.39551  c
79.1553 8.19434 78.9258 8.09375 78.6055 8.09375  c
77.8984 8.09375 77.2324 8.55664 76.6074 9.48242  c
76.6074 13.6016 l
h
86.1816 12.7930 m
85.4902 13.4297 84.8242 13.7480 84.1836 13.7480  c
83.6562 13.7480 83.2188 13.5830 82.8711 13.2529  c
82.5234 12.9229 82.3496 12.5059 82.3496 12.0020  c
82.3496 11.3066 82.6416 10.7725 83.2256 10.3994  c
83.8096 10.0264 84.6465 9.83984 85.7363 9.83984  c
86.0117 9.83984 l
86.0117 9.07227 l
86.0117 8.33398 85.6328 7.96484 84.8750 7.96484  c
84.2656 7.96484 83.6074 8.15234 82.9004 8.52734  c
82.9004 7.57227 l
83.6777 7.25586 84.4062 7.09766 85.0859 7.09766  c
85.7969 7.09766 86.3213 7.25781 86.6592 7.57812  c
86.9971 7.89844 87.1660 8.39648 87.1660 9.07227  c
87.1660 11.9551 l
87.1660 12.6152 87.3691 12.9453 87.7754 12.9453  c
87.8262 12.9453 87.9004 12.9375 87.9980 12.9219  c
88.0801 13.5605 l
87.8184 13.6855 87.5293 13.7480 87.2129 13.7480  c
86.6738 13.7480 86.3301 13.4297 86.1816 12.7930  c
h
86.0117 12.1660 m
86.0117 10.5195 l
85.6250 10.5078 l
84.9922 10.5078 84.4805 10.6279 84.0898 10.8682  c
83.6992 11.1084 83.5039 11.4238 83.5039 11.8145  c
83.5039 12.0918 83.6016 12.3262 83.7969 12.5176  c
83.9922 12.7090 84.2305 12.8047 84.5117 12.8047  c
84.9922 12.8047 85.4922 12.5918 86.0117 12.1660  c
h
93.9746 13.6016 m
93.9746 12.7344 l
95.7090 12.7344 l
95.7090 5.89062 l
93.9746 6.32422 l
93.9746 5.43359 l
96.8691 4.71289 l
96.8691 12.7344 l
98.6035 12.7344 l
98.6035 13.6016 l
h
f
2 J
10.0000 M
Q
q
[ -1.83697E-16 -1.00000 1.00000 -1.83697E-16 251.500 396.879 ] concat
0 J
1.45000 M
newpath
3.11914 13.6016 m
3.11914 4.92969 l
5.48047 4.92969 l
6.52734 4.92969 7.27930 5.10645 7.73633 5.45996  c
8.19336 5.81348 8.42188 6.39453 8.42188 7.20312  c
8.42188 8.12500 8.10938 8.84766 7.48438 9.37109  c
6.85938 9.89453 5.99219 10.1562 4.88281 10.1562  c
4.33789 10.1562 l
4.33789 13.6016 l
h
4.33789 9.22461 m
4.83594 9.22461 l
5.56641 9.22461 6.13086 9.05664 6.52930 8.72070  c
6.92773 8.38477 7.12695 7.91016 7.12695 7.29688  c
7.12695 6.77734 6.97070 6.40625 6.65820 6.18359  c
6.34570 5.96094 5.82422 5.84961 5.09375 5.84961  c
4.33789 5.84961 l
h
9.78711 13.6016 m
9.78711 4.34961 l
10.9414 4.34961 l
10.9414 13.6016 l
h
16.5371 12.7930 m
15.8457 13.4297 15.1797 13.7480 14.5391 13.7480  c
14.0117 13.7480 13.5742 13.5830 13.2266 13.2529  c
12.8789 12.9229 12.7051 12.5059 12.7051 12.0020  c
12.7051 11.3066 12.9971 10.7725 13.5811 10.3994  c
14.1650 10.0264 15.0020 9.83984 16.0918 9.83984  c
16.3672 9.83984 l
16.3672 9.07227 l
16.3672 8.33398 15.9883 7.96484 15.2305 7.96484  c
14.6211 7.96484 13.9629 8.15234 13.2559 8.52734  c
13.2559 7.57227 l
14.0332 7.25586 14.7617 7.09766 15.4414 7.09766  c
16.1523 7.09766 16.6768 7.25781 17.0146 7.57812  c
17.3525 7.89844 17.5215 8.39648 17.5215 9.07227  c
17.5215 11.9551 l
17.5215 12.6152 17.7246 12.9453 18.1309 12.9453  c
18.1816 12.9453 18.2559 12.9375 18.3535 12.9219  c
18.4355 13.5605 l
18.1738 13.6855 17.8848 13.7480 17.5684 13.7480  c
17.0293 13.7480 16.6855 13.4297 16.5371 12.7930  c
h
16.3672 12.1660 m
16.3672 10.5195 l
15.9805 10.5078 l
15.3477 10.5078 14.8359 10.6279 14.4453 10.8682  c
14.0547 11.1084 13.8594 11.4238 13.8594 11.8145  c
13.8594 12.0918 13.9570 12.3262 14.1523 12.5176  c
14.3477 12.7090 14.5859 12.8047 14.8672 12.8047  c
15.3477 12.8047 15.8477 12.5918 16.3672 12.1660  c
h
21.2012 13.6016 m
18.8340 7.23828 l
19.9883 7.23828 l
21.8398 12.1895 l
23.7910 7.23828 l
24.8691 7.23828 l
22.3555 13.6016 l
h
30.7578 13.3965 m
29.9844 13.6309 29.3223 13.7480 28.7715 13.7480  c
27.8340 13.7480 27.0693 13.4365 26.4775 12.8135  c
25.8857 12.1904 25.5898 11.3828 25.5898 10.3906  c
25.5898 9.42578 25.8506 8.63477 26.3721 8.01758  c
26.8936 7.40039 27.5605 7.09180 28.3730 7.09180  c
29.1426 7.09180 29.7373 7.36523 30.1572 7.91211  c
30.5771 8.45898 30.7871 9.23633 30.7871 10.2441  c
30.7812 10.6016 l
26.7676 10.6016 l
26.9355 12.1133 27.6758 12.8691 28.9883 12.8691  c
29.4688 12.8691 30.0586 12.7402 30.7578 12.4824  c
h
26.8203 9.73438 m
29.6270 9.73438 l
29.6270 8.55078 29.1855 7.95898 28.3027 7.95898  c
27.4160 7.95898 26.9219 8.55078 26.8203 9.73438  c
h
35.2637 13.7480 m
34.4043 13.7480 33.6914 13.4297 33.1250 12.7930  c
32.5586 12.1562 32.2754 11.3535 32.2754 10.3848  c
32.2754 9.34961 32.5557 8.54297 33.1162 7.96484  c
33.6768 7.38672 34.4590 7.09766 35.4629 7.09766  c
35.9590 7.09766 36.5137 7.16602 37.1270 7.30273  c
37.1270 8.26953 l
36.4746 8.07812 35.9434 7.98242 35.5332 7.98242  c
34.9434 7.98242 34.4697 8.20410 34.1123 8.64746  c
33.7549 9.09082 33.5762 9.68164 33.5762 10.4199  c
33.5762 11.1348 33.7598 11.7129 34.1270 12.1543  c
34.4941 12.5957 34.9746 12.8164 35.5684 12.8164  c
36.0957 12.8164 36.6387 12.6816 37.1973 12.4121  c
37.1973 13.4082 l
36.4512 13.6348 35.8066 13.7480 35.2637 13.7480  c
h
38.9258 13.6016 m
38.9258 4.34961 l
40.0801 4.34961 l
40.0801 10.3262 l
42.7754 7.23828 l
44.0176 7.23828 l
41.4453 10.2090 l
44.5508 13.6016 l
43.0742 13.6016 l
40.0801 10.3379 l
40.0801 13.6016 l
h
49.2207 12.7930 m
48.5293 13.4297 47.8633 13.7480 47.2227 13.7480  c
46.6953 13.7480 46.2578 13.5830 45.9102 13.2529  c
45.5625 12.9229 45.3887 12.5059 45.3887 12.0020  c
45.3887 11.3066 45.6807 10.7725 46.2646 10.3994  c
46.8486 10.0264 47.6855 9.83984 48.7754 9.83984  c
49.0508 9.83984 l
49.0508 9.07227 l
49.0508 8.33398 48.6719 7.96484 47.9141 7.96484  c
47.3047 7.96484 46.6465 8.15234 45.9395 8.52734  c
45.9395 7.57227 l
46.7168 7.25586 47.4453 7.09766 48.1250 7.09766  c
48.8359 7.09766 49.3604 7.25781 49.6982 7.57812  c
50.0361 7.89844 50.2051 8.39648 50.2051 9.07227  c
50.2051 11.9551 l
50.2051 12.6152 50.4082 12.9453 50.8145 12.9453  c
50.8652 12.9453 50.9395 12.9375 51.0371 12.9219  c
51.1191 13.5605 l
50.8574 13.6855 50.5684 13.7480 50.2520 13.7480  c
49.7129 13.7480 49.3691 13.4297 49.2207 12.7930  c
h
49.0508 12.1660 m
49.0508 10.5195 l
48.6641 10.5078 l
48.0312 10.5078 47.5195 10.6279 47.1289 10.8682  c
46.7383 11.1084 46.5430 11.4238 46.5430 11.8145  c
46.5430 12.0918 46.6406 12.3262 46.8359 12.5176  c
47.0312 12.7090 47.2695 12.8047 47.5508 12.8047  c
48.0312 12.8047 48.5312 12.5918 49.0508 12.1660  c
h
47.2812 6.08398 m
48.6934 4.20312 l
50.0293 4.20312 l
48.1484 6.08398 l
h
60.4473 13.6016 m
60.4473 12.4062 l
59.9785 13.3008 59.2715 13.7480 58.3262 13.7480  c
57.5605 13.7480 56.9580 13.4688 56.5186 12.9102  c
56.0791 12.3516 55.8594 11.5879 55.8594 10.6191  c
55.8594 9.56055 56.1084 8.70898 56.6064 8.06445  c
57.1045 7.41992 57.7598 7.09766 58.5723 7.09766  c
59.3262 7.09766 59.9512 7.38672 60.4473 7.96484  c
60.4473 4.34961 l
61.6074 4.34961 l
61.6074 13.6016 l
h
60.4473 8.75586 m
59.8496 8.22852 59.2832 7.96484 58.7480 7.96484  c
57.6426 7.96484 57.0898 8.81055 57.0898 10.5020  c
57.0898 11.9902 57.5820 12.7344 58.5664 12.7344  c
59.2070 12.7344 59.8340 12.3848 60.4473 11.6855  c
h
63.9160 13.6016 m
63.9160 7.23828 l
65.0703 7.23828 l
65.0703 8.43359 l
65.5273 7.54297 66.1914 7.09766 67.0625 7.09766  c
67.1797 7.09766 67.3027 7.10742 67.4316 7.12695  c
67.4316 8.20508 l
67.2324 8.13867 67.0566 8.10547 66.9043 8.10547  c
66.1738 8.10547 65.5625 8.53906 65.0703 9.40625  c
65.0703 13.6016 l
h
72.1074 12.7930 m
71.4160 13.4297 70.7500 13.7480 70.1094 13.7480  c
69.5820 13.7480 69.1445 13.5830 68.7969 13.2529  c
68.4492 12.9229 68.2754 12.5059 68.2754 12.0020  c
68.2754 11.3066 68.5674 10.7725 69.1514 10.3994  c
69.7354 10.0264 70.5723 9.83984 71.6621 9.83984  c
71.9375 9.83984 l
71.9375 9.07227 l
71.9375 8.33398 71.5586 7.96484 70.8008 7.96484  c
70.1914 7.96484 69.5332 8.15234 68.8262 8.52734  c
68.8262 7.57227 l
69.6035 7.25586 70.3320 7.09766 71.0117 7.09766  c
71.7227 7.09766 72.2471 7.25781 72.5850 7.57812  c
72.9229 7.89844 73.0918 8.39648 73.0918 9.07227  c
73.0918 11.9551 l
73.0918 12.6152 73.2949 12.9453 73.7012 12.9453  c
73.7520 12.9453 73.8262 12.9375 73.9238 12.9219  c
74.0059 13.5605 l
73.7441 13.6855 73.4551 13.7480 73.1387 13.7480  c
72.5996 13.7480 72.2559 13.4297 72.1074 12.7930  c
h
71.9375 12.1660 m
71.9375 10.5195 l
71.5508 10.5078 l
70.9180 10.5078 70.4062 10.6279 70.0156 10.8682  c
69.6250 11.1084 69.4297 11.4238 69.4297 11.8145  c
69.4297 12.0918 69.5273 12.3262 69.7227 12.5176  c
69.9180 12.7090 70.1562 12.8047 70.4375 12.8047  c
70.9180 12.8047 71.4180 12.5918 71.9375 12.1660  c
h
70.1680 6.08398 m
71.5801 4.20312 l
72.9160 4.20312 l
71.0352 6.08398 l
h
75.4531 13.6016 m
75.4531 4.34961 l
76.6074 4.34961 l
76.6074 8.43359 l
77.2168 7.54297 77.9629 7.09766 78.8457 7.09766  c
79.3965 7.09766 79.8359 7.27246 80.1641 7.62207  c
80.4922 7.97168 80.6562 8.44141 80.6562 9.03125  c
80.6562 13.6016 l
79.5020 13.6016 l
79.5020 9.40625 l
79.5020 8.93359 79.4326 8.59668 79.2939 8.39551  c
79.1553 8.19434 78.9258 8.09375 78.6055 8.09375  c
77.8984 8.09375 77.2324 8.55664 76.6074 9.48242  c
76.6074 13.6016 l
h
86.1816 12.7930 m
85.4902 13.4297 84.8242 13.7480 84.1836 13.7480  c
83.6562 13.7480 83.2188 13.5830 82.8711 13.2529  c
82.5234 12.9229 82.3496 12.5059 82.3496 12.0020  c
82.3496 11.3066 82.6416 10.7725 83.2256 10.3994  c
83.8096 10.0264 84.6465 9.83984 85.7363 9.83984  c
86.0117 9.83984 l
86.0117 9.07227 l
86.0117 8.33398 85.6328 7.96484 84.8750 7.96484  c
84.2656 7.96484 83.6074 8.15234 82.9004 8.52734  c
82.9004 7.57227 l
83.6777 7.25586 84.4062 7.09766 85.0859 7.09766  c
85.7969 7.09766 86.3213 7.25781 86.6592 7.57812  c
86.9971 7.89844 87.1660 8.39648 87.1660 9.07227  c
87.1660 11.9551 l
87.1660 12.6152 87.3691 12.9453 87.7754 12.9453  c
87.8262 12.9453 87.9004 12.9375 87.9980 12.9219  c
88.0801 13.5605 l
87.8184 13.6855 87.5293 13.7480 87.2129 13.7480  c
86.6738 13.7480 86.3301 13.4297 86.1816 12.7930  c
h
86.0117 12.1660 m
86.0117 10.5195 l
85.6250 10.5078 l
84.9922 10.5078 84.4805 10.6279 84.0898 10.8682  c
83.6992 11.1084 83.5039 11.4238 83.5039 11.8145  c
83.5039 12.0918 83.6016 12.3262 83.7969 12.5176  c
83.9922 12.7090 84.2305 12.8047 84.5117 12.8047  c
84.9922 12.8047 85.4922 12.5918 86.0117 12.1660  c
h
93.1660 13.6016 m
93.1660 12.5879 l
93.5020 11.8027 94.1816 10.9473 95.2051 10.0215  c
95.8672 9.42969 l
96.7188 8.66016 97.1445 7.89648 97.1445 7.13867  c
97.1445 6.65430 96.9990 6.27344 96.7080 5.99609  c
96.4170 5.71875 96.0176 5.58008 95.5098 5.58008  c
94.9082 5.58008 94.1992 5.81250 93.3828 6.27734  c
93.3828 5.25781 l
94.1523 4.89453 94.9160 4.71289 95.6738 4.71289  c
96.4863 4.71289 97.1387 4.93164 97.6309 5.36914  c
98.1230 5.80664 98.3691 6.38672 98.3691 7.10938  c
98.3691 7.62891 98.2451 8.08984 97.9971 8.49219  c
97.7490 8.89453 97.2871 9.38281 96.6113 9.95703  c
96.1660 10.3379 l
95.2402 11.1230 94.7051 11.8730 94.5605 12.5879  c
98.3281 12.5879 l
98.3281 13.6016 l
h
f
2 J
10.0000 M
Q
Q
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore

%%Trailer
%%EOF
